# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # arm-env:
  #   docker:
  #     - image: cimg/base:2023.06
  #   resource_class: arm-large
    
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - run: |
  #         uname -a;
  #         docker run --rm ubuntu uname -a
  build-image:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # docker:
    #   - image: cimg/base:stable
    machine:
      image: ubuntu-2204:2023.02.1
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "docker login"
          command: "docker login -u=$DOCKER_USER -p=$DOCKER_PASSWORD"
      - run:
          name: "Setup Buildx"
          command: "docker buildx create --use"
      - run:
          name: "Build provisioner"
          command: "docker buildx build --platform linux/arm64,linux/amd64 -t linkinghack/provisioner-nfs:0.10.0 -f ./buildscripts/provisioner-nfs/Dockerfile . --push"
      - run:
          name: "Build nfs server"
          command: "cd nfs-server-container && docker buildx build --platform linux/arm64,linux/amd64 -t linkinghack/nfs-server-alpine:0.10.0 . --push"


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  image-build-workflow:
    jobs:
      # - arm-env
      - build-image

